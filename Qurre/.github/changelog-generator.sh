#bin/bash

get_user_login() {
  local email="$1"
  local username="" # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π

  # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ –ø–æ–ª–µ–∑–Ω–æ)
  if [[ ! "$email" =~ ^.+@.+\..+$ ]]; then
    echo "::warning::–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email: $email" >&2 # –í—ã–≤–æ–¥ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤ –ª–æ–≥ Actions
    echo "" # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
    return
  fi

  echo "::debug::–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è email: $email" >&2 # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  # –ò—â–µ–º –∫–æ–º–º–∏—Ç, –±–µ—Ä–µ–º –ª–æ–≥–∏–Ω –∞–≤—Ç–æ—Ä–∞. 2>/dev/null —Å–∫—Ä—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ gh (–Ω–∞–ø—Ä–∏–º–µ—Ä, rate limit)
  # `|| echo ""` –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø—É—Å—Ç–æ–π –≤—ã–≤–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ –∫–æ–º–∞–Ω–¥—ã gh
  username=$(gh search commits --author-email="$email" --limit=1 --json=author --jq '.[0].author.login // empty' 2>/dev/null || echo "")

  if [[ -n "$username" ]]; then
    echo "::debug::–ù–∞–π–¥–µ–Ω –ª–æ–≥–∏–Ω '$username' –¥–ª—è '$email'" >&2
  else
    echo "::debug::–õ–æ–≥–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è '$email'" >&2
  fi
  echo "$username" # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
}

VERSION=${GITHUB_REF_NAME}
echo "Generating release notes for version: $VERSION"

# –ù–∞—Ö–æ–¥–∏–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥. –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç (–ø–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑), PREV_TAG –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º.
# –ò—Å–ø–æ–ª—å–∑—É–µ–º VERSION^ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–≥–∞ –ø–µ—Ä–µ–¥ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–µ–π.
PREV_TAG=$(git describe --tags --abbrev=0 ${VERSION}^ 2>/dev/null || echo "")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º COMPARE_URL –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–º–º–∏—Ç–æ–≤
if [ -z "$PREV_TAG" ]; then
  echo "No previous tag found, assuming this is the first release."
  # –í —Å–ª—É—á–∞–µ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–ª–∏–∑–∞ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –∫–æ–º–º–∏—Ç–æ–≤ –±—É–¥–µ—Ç –æ—Ç –Ω–∞—á–∞–ª–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–æ VERSION
  RANGE=$VERSION
  # –°—Å—ã–ª–∫–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –±—É–¥–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç (–º–æ–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
  COMPARE_URL="https://github.com/$GITHUB_REPOSITORY/commits/$VERSION"
else
  echo "Previous tag found: $PREV_TAG"
  # –î–∏–∞–ø–∞–∑–æ–Ω –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–µ–ª–∏–∑–∞
  RANGE="$PREV_TAG..$VERSION"
  # –°—Å—ã–ª–∫–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –º–µ–∂–¥—É —Ç–µ–≥–∞–º–∏
  COMPARE_URL="https://github.com/$GITHUB_REPOSITORY/compare/$PREV_TAG...$VERSION"
fi

# 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "What's Changed"
# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (—Å—Ç–∏–ª—å Conventional Commits)
# –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç: type:, type(scope):, type!:, type(scope)!: –∏ —Ç.–¥.
# –†–∞–∑—Ä–µ—à–∞–µ—Ç —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –¥–ª—è —Ç–∏–ø–∞, –±—É–∫–≤–µ–Ω–Ω–æ-—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã/–ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ/–ø—Ä–æ–±–µ–ª/–¥–µ—Ñ–∏—Å –≤ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ (scope).
TYPE_REGEX='^[a-z]+(\([a-zA-Z0-9_ -]+\))?!?:\ ' 
# –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–±–µ–ª –≤ –∫–æ–Ω—Ü–µ ^^^ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–≤–æ–µ—Ç–æ—á–∏—é *–∏* —Å–ª–µ–¥—É—é—â–µ–º—É –ø—Ä–æ–±–µ–ª—É –¥–ª—è –±–æ–ª–µ–µ —á–∏—Å—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è.

# === –§—É–Ω–∫—Ü–∏–∏ ===

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
trim() {
    local var="$*"
    # —É–¥–∞–ª–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    var="${var#"${var%%[![:space:]]*}"}"
    # —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    var="${var%"${var##*[![:space:]]}"}"
    printf '%s' "$var"
}

# === –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ===

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä–æ–∫ –≤—ã–≤–æ–¥–∞
declare -a output_commit_lines=()

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω—É–ª–µ–≤—ã–µ –±–∞–π—Ç—ã (%x00) –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π –ø–æ–ª–µ–π –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—ã–≤–æ–¥–∞ git log.
# –§–æ—Ä–º–∞—Ç: HASH<null>RELATIVE_TIME<null>AUTHOR_EMAIL<null>SUBJECT_AND_BODY<null>
git log "$RANGE" --pretty=format:'%H%x00%cr%x00%ae%x00%s%x00' | \
while 
    IFS= read -r -d $'\0' HASH && \
    IFS= read -r -d $'\0' CR && \
    IFS= read -r -d $'\0' AE && \
    IFS= read -r -d $'\0' S_BODY # –°—á–∏—Ç—ã–≤–∞–µ–º 4 –ø–æ–ª—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–º–º–∏—Ç–∞
do
    # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –µ—Å–ª–∏ –∫–∞–∫–æ–µ-–ª–∏–±–æ –≤–∞–∂–Ω–æ–µ –ø–æ–ª–µ –ø—É—Å—Ç–æ (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Å —ç—Ç–∏–º —Ñ–æ—Ä–º–∞—Ç–æ–º)
    if [[ -z "$HASH" || -z "$CR" || -z "$AE" ]]; then
        continue
    fi
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫—É –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ mapfile (readarray) –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è SUBJECT_AND_BODY –Ω–∞ —Å—Ç—Ä–æ–∫–∏.
    # –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π S_BODY.
    # –¢—Ä–µ–±—É–µ—Ç—Å—è Bash 4.0+
    mapfile -t lines <<< "$S_BODY"
    
    is_first_line=true # –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–∞–º–æ–π –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–∞

    # –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–∞ (%s)
    for line in "${lines[@]}"; do
      
        line_trimmed=$(trim "$line") # –û–±—Ä–µ–∑–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫

        # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        if [[ -z "$line_trimmed" ]]; then
            continue
        fi
        
        # –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ª–∏ —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ summary, –∫–æ—Ç–æ—Ä—ã–π –º—ã –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
        process_this_line=false
        current_summary=""

        if "$is_first_line"; then
            # –ü–µ—Ä–≤–∞—è –Ω–µ–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Å–µ–≥–¥–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –∫–∞–∫ summary
            current_summary="$line_trimmed"
            process_this_line=true
            is_first_line=false # –°–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å TYPE_REGEX
        # –ü—Ä–∞–≤–∏–ª–æ 1: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –ø–æ—Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞ —Ç–∏–ø–∞ conventional commit
        elif [[ "$line_trimmed" =~ $TYPE_REGEX ]]; then
             current_summary="$line_trimmed"
             process_this_line=true
        fi
        
        # –ï—Å–ª–∏ —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –±—ã–ª–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞ –∫–∞–∫ summary –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏...
        if "$process_this_line"; then
          
          # –ü—Ä–∞–≤–∏–ª–æ 5: –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –µ—Å–ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π summary –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '!' (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã),
          # –Ω–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è !breaking –∏–ª–∏ !release
            if [[ "$current_summary" == "!"* && "$current_summary" != "!breaking"* && "$current_summary" != "!release"* ]]; then
                continue # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—Ç—Ä–æ–∫—É summary
            fi
            
            prefix="" # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å (emoji, BREAK –∏ —Ç.–¥.)
            cleaned_summary="$current_summary" # –ù–∞—á–∞—Ç—å —Å –ø–æ–ª–Ω–æ–≥–æ summary
            
            # –ü—Ä–∞–≤–∏–ª–æ 2: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ !breaking
            if [[ "$current_summary" == "!breaking"* ]]; then
                prefix="`BREAK` " # –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–±–µ–ª –≤ –∫–æ–Ω—Ü–µ
                # –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –∏–∑ summary
                cleaned_summary="${current_summary#"!breaking"}" 
                cleaned_summary=$(trim "$cleaned_summary") # –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ–±—Ä–µ–∑–∞—Ç—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–∞
            # –ü—Ä–∞–≤–∏–ª–æ 3: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ !release
            elif [[ "$current_summary" == "!release"* ]]; then
                prefix="üéâ " # –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–±–µ–ª –≤ –∫–æ–Ω—Ü–µ
                # –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –∏–∑ summary
                cleaned_summary="${current_summary#"!release"}"
                cleaned_summary=$(trim "$cleaned_summary") # –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ–±—Ä–µ–∑–∞—Ç—å
            fi
            
            # –§–∏–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–µ–∑–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ summary
            cleaned_summary=$(trim "$cleaned_summary")
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email
            login=$(get_user_login "$AE")
            
            # –ü—Ä–∞–≤–∏–ª–æ 4: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É
            # –í—ã–≤–æ–¥: - {PREFIX} {SUMMARY} [(RELATIVE_TIME)](/commit/HASH) by AUTHOR_EMAIL
            formatted_line="- ${prefix}${cleaned_summary} (${CR}) by @${login} ${HASH}"
            
            # *** –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–∞–π–ª ***
            echo "$formatted_line" >> commit-file.md
            
        fi # end if process_this_line
    done # end loop through lines of a single commit message
done # end loop through commits

# === –§–∏–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ ===

# –¢–µ–ø–µ—Ä—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ñ–∞–π–ª–µ "commit-file.md"

all_commit_summaries=$(cat commit-file.md)

# –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è 'all_commit_summaries' —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏,
# —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª–∞–º–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π:
echo "--- –ü–æ–ª–Ω–∞—è –°–≤–æ–¥–∫–∞ –ö–æ–º–º–∏—Ç–æ–≤ ---"
echo "$all_commit_summaries"
echo "-----------------------------"

# –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ${all_commit_summaries} –¥–∞–ª—å—à–µ –≤ –≤–∞—à–µ–º —Å–∫—Ä–∏–ø—Ç–µ,
# –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥–µ.
# –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª:
# echo "${all_commit_summaries}" > changelog_details.md


# 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
# –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤ –≤ —Ç–µ–∫—É—â–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ —Ä–µ–ª–∏–∑–∞
CURRENT_AUTHORS=$(git log --pretty=format:"%ae" $RANGE | sort -u)

if [ -z "$PREV_TAG" ]; then
  # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑, –≤—Å–µ –∞–≤—Ç–æ—Ä—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –Ω–æ–≤—ã–º–∏
  NEW_CONTRIBUTORS_LIST="$CURRENT_AUTHORS"
else
  # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤ –≤–æ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –î–û –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–µ–≥–∞
  # –ò—Å–ø–æ–ª—å–∑—É–µ–º $PREV_TAG –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ "–ø—Ä–æ—à–ª—ã—Ö" –∞–≤—Ç–æ—Ä–æ–≤
  PAST_AUTHORS=$(git log --pretty=format:"%ae" $PREV_TAG | sort -u)
  # –ù–∞—Ö–æ–¥–∏–º –∞–≤—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ CURRENT_AUTHORS, –Ω–æ –Ω–µ—Ç –≤ PAST_AUTHORS
  # comm -13 –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫–∏, —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —Ñ–∞–π–ª–∞ (CURRENT_AUTHORS)
  NEW_CONTRIBUTORS_LIST=$(comm -13 <(echo "$PAST_AUTHORS" | sort) <(echo "$CURRENT_AUTHORS" | sort))
fi

# –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: –¥–æ–±–∞–≤–ª—è–µ–º @ –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –ø—Ä–æ–±–µ–ª–∞–º–∏
if [ -n "$NEW_CONTRIBUTORS_LIST" ]; then
          while IFS= read -r current_email; do
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
            if [[ -z "$current_email" ]]; then
              continue
            fi

            # –£–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            trimmed_email=$(echo "$current_email" | xargs)

            # –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏–Ω –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ email
            login=$(get_user_login "$trimmed_email")

            # –ï—Å–ª–∏ –ª–æ–≥–∏–Ω –Ω–µ –ø—É—Å—Ç–æ–π, –¥–æ–±–∞–≤–ª—è–µ–º @–ª–æ–≥–∏–Ω –≤ –º–∞—Å—Å–∏–≤
            if [[ -n "$login" ]]; then
              processed_logins+=("@$login")
            fi
          done <<< "$NEW_CONTRIBUTORS_LIST" # –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ NEW_CONTRIBUTORS_LIST –≤ —Ü–∏–∫–ª while

          # –û–±—ä–µ–¥–∏–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —á–µ—Ä–µ–∑ ", "
          # –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ –Ω–µ –ø—É—Å—Ç–æ–π
          CONTRIBUTORS=""
          if [[ ${#processed_logins[@]} -gt 0 ]]; then
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å IFS –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã echo
            local IFS=", "
            # ${processed_logins[*]} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª IFS –∫–∞–∫ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
            CONTRIBUTORS="${processed_logins[*]}"
          fi

  echo "New contributors found: $CONTRIBUTORS"
else
  CONTRIBUTORS=""
  echo "No new contributors in this release."
fi

# 3. –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è diff –∏ log
if [[ -z "$PREV_TAG" ]]; then
    echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥ —Ä–µ–ª–∏–∑–∞. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ª–æ–≥ –±—É–¥—É—Ç –æ—Ç –Ω–∞—á–∞–ª–∞ –∏—Å—Ç–æ—Ä–∏–∏." >&2
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    PREV_RELEASE_REF=$(git rev-list --max-parents=0 HEAD) 
    COMMIT_RANGE="${PREV_RELEASE_REF}..${VERSION}"
    PREV_TAG_NAME="first commit"
    CALC_DAYS=false # –ù–µ –º–æ–∂–µ–º —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–Ω–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ
else
    PREV_RELEASE_REF="$PREV_TAG"
    COMMIT_RANGE="${PREV_RELEASE_REF}..${VERSION}"
    PREV_TAG_NAME="$PREV_TAG"
    CALC_DAYS=true
fi

echo "–î–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –ª–æ–≥–∞: ${COMMIT_RANGE}" >&2

# 1. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π (—Ñ–∞–π–ª—ã, –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, —É–¥–∞–ª–µ–Ω–∏—è)
DIFF_STATS=$(git diff --shortstat "$COMMIT_RANGE" 2>/dev/null)
FILES_CHANGED=$(echo "$DIFF_STATS" | grep -o '[0-9]\+ file' | grep -o '[0-9]\+')
ADDITIONS=$(echo "$DIFF_STATS" | grep -o '[0-9]\+ insertion' | grep -o '[0-9]\+')
DELETIONS=$(echo "$DIFF_STATS" | grep -o '[0-9]\+ deletion' | grep -o '[0-9]\+')

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ 0, –µ—Å–ª–∏ grep –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª
FILES_CHANGED=${FILES_CHANGED:-0}
ADDITIONS=${ADDITIONS:-0}
DELETIONS=${DELETIONS:-0}

# 2. –í—ã—á–∏—Å–ª—è–µ–º –¥–Ω–∏ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ä–µ–ª–∏–∑–∞ (–µ—Å–ª–∏ –æ–Ω –±—ã–ª –Ω–∞–π–¥–µ–Ω)
DAYS_SINCE_STR=""
if $CALC_DAYS; then
    PREV_TIMESTAMP=$(git log -1 --format=%ct "$PREV_RELEASE_REF" 2>/dev/null)
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º—è –∫–æ–º–º–∏—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç VERSION
    CURR_TIMESTAMP=$(git log -1 --format=%ct "$VERSION" 2>/dev/null) 
    
    if [[ -n "$PREV_TIMESTAMP" && -n "$CURR_TIMESTAMP" ]]; then
        DELTA_SECONDS=$(( CURR_TIMESTAMP - PREV_TIMESTAMP ))
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥ –æ–∫–∞–∑–∞–ª—Å—è –Ω–æ–≤–µ–µ (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ)
        if (( DELTA_SECONDS < 0 )); then DELTA_SECONDS=0; fi 
        # –°–µ–∫—É–Ω–¥ –≤ –¥–Ω–µ = 60 * 60 * 24 = 86400
        DAYS_SINCE=$(( DELTA_SECONDS / 86400 )) 
        DAYS_SINCE_STR=" | Days since (${PREV_TAG_NAME}): ${DAYS_SINCE}" 
    else
         echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–Ω–µ–π." >&2
    fi
fi

# 3. –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
STATS_LINE="Files changed: ${FILES_CHANGED} | Additions: ${ADDITIONS} | Deletions: ${DELETIONS}${DAYS_SINCE_STR}"


{
  echo "# Changelog: $VERSION"
  echo ""
  
  echo "<details>"
  echo "<summary>What's Changed</summary>"
  echo ""
  echo "${all_commit_summaries}"
  echo ""
  echo "</details>"
  echo ""
  
  echo "### New Contributors"
  if [ -z "$CONTRIBUTORS" ]; then
    echo "No new contributors in this release."
  else
    echo $CONTRIBUTORS
  fi
  echo ""
  
  echo "**Full changes list**: $COMPARE_URL"
  echo ""
  
  echo "###### $STATS_LINE"
} > release-notes.md